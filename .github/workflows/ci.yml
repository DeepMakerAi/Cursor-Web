name: CI

on:
  push:
    branches: [ main, develop ]
    tags:
      - '*'
  pull_request:
    branches: [ main ]

permissions:
  contents: write

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x, 18.x, 20.x]

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run linter
      run: npm run lint || echo "No lint script found"

    - name: Run tests
      run: npm test || echo "No test script found"

    - name: Check if build works
      run: npm run build || echo "No build script found"

  security:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run security audit
      run: npm audit --audit-level=high || npm audit fix --force

  release:
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Package Windows executable
        run: npm run package
      - name: Prepare release folder
        run: |
          mkdir release
          cp app.js package.json package-lock.json release/
          cp -r public release/
          if [ -d routes ]; then cp -r routes release/; fi
          if [ -d services ]; then cp -r services release/; fi
          if [ -d middleware ]; then cp -r middleware release/; fi
          if [ -d config ]; then cp -r config release/; fi
          cp cursor-web.exe release/
      - name: Create zip
        run: cd release && zip -r ../release.zip .
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: release.zip
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
